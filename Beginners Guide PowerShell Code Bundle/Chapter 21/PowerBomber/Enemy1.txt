NAME:ENEMY
SPEED:6
HEIGHT:3
WIDTH:5
FRAMES:1
{! !}
==*==
 / \ 
MOVESCRIPTSTART:

#if we have no objectives then made a decision on what to do next
#"objective:" + $this.objective >> debug.txt
#"sub objective:" + $this.subObjective >> debug.txt

#Look around to see whats close
$closestPlayer  = $this.DistanceToTarget("PLAYER")
$closestSpecial = $this.DistanceToTarget("SPECIAL")
$closestBlock   = $this.DistanceToTarget("BLOCK2")
$closestBomb    = $this.DistanceToTarget("BOMB")

if($this.objective -eq "NONE")
{
	#Choose what to do depending on whats close

	#NONE
	#MOVETOBLOCK
	#MOVEOVERSPECIAL
	#MOVETOPLAYER
	#EVADEBOMB
    #DROPBOMB
        
	if($closestBomb.distance -lt 7)
	{
        #EVADEBOMB
		$this.objective = "EVADEBOMB"
        
        $eX = 0
        $eY = 0

        Do
        {
            #find somewhere to run to and check for no collisions.
            $eX = $this.xPosition + ($this.objectWidth  * (Get-Random -Maximum 3 -Minimum -3))
            $eY = $this.yPosition + ($this.objectHeight * (Get-Random -Maximum 3 -Minimum -3))
            $collide = $this.DoesCollide($eX, $eY, $this.objectHeight, $this.objectWidth)
        }
        While($collide -eq $true)
        
        #get path to target position
        $this.path = $global:pathFinder.FindPath($this, $eX, $eY)
	}
    elseif($closestBlock.distance -lt 8 -or $closestPlayer.distance -lt 8 )
    {
        #DROPBOMB
        $this.objective = "DROPBOMB"
    }
	elseif($closestPlayer.distance -lt 20)
	{
		#MOVETOPLAYER
		$this.objective = "MOVETOPLAYER"

        #get target position to next block        
        [Target]$position = $this.PositionNextToTarget($closestPlayer.object)

        #get path to target position
        $this.path = $global:pathFinder.FindPath($this, $position.object.xPosition, $position.object.yPosition)
	}
	elseif($closestSpecial.distance -lt 15)
	{
		#MOVEOVERSPECIAL
		$this.objective = "MOVEOVERSPECIAL"
	}
	elseif($closestBlock.distance -lt 60)
	{
		#MOVETOBLOCK
		$this.objective = "MOVETOBLOCK"
             
        #get target position to next block  
        [Target]$position = $this.PositionNextToTarget($closestBlock.object)
                
        $collide = $this.DoesCollide($position.object.xPosition, $position.object.yPosition, $this.objectHeight, $this.objectWidth)
        
        if($collide -eq $true)
        {
            #collided in logical poisition so try all four positions then loop to locate a random position

            #top
            $position.object.xPosition = $closestBlock.object.xPosition
            $position.object.yPosition = $closestBlock.object.yPosition-$closestBlock.object.objectHeight
            $collide = $this.DoesCollide($position.object.xPosition, $position.object.yPosition, $this.objectHeight, $this.objectWidth)
                
            if($collide -eq $true)
            {
                #write-host "top collided trying right"

                #right
                $position.object.xPosition = $closestBlock.object.xPosition+$closestBlock.object.objectWidth
                $position.object.yPosition = $closestBlock.object.yPosition
                $collide = $this.DoesCollide($position.object.xPosition, $position.object.yPosition, $this.objectHeight, $this.objectWidth)
            }
            
            if($collide -eq $true)
            {
                #write-host "right collided trying bottom"

                #bottom
                $position.object.xPosition = $closestBlock.object.xPosition
                $position.object.yPosition = $closestBlock.object.yPosition+$closestBlock.object.objectHeight
                $collide = $this.DoesCollide($position.object.xPosition, $position.object.yPosition, $this.objectHeight, $this.objectWidth)
            }
            
            if($collide -eq $true)
            {
                #write-host "bottom collided trying left"

                #left
                $position.object.xPosition = $closestBlock.object.xPosition-$closestBlock.object.objectWidth
                $position.object.yPosition = $closestBlock.object.yPosition
                $collide = $this.DoesCollide($position.object.xPosition, $position.object.yPosition, $this.objectHeight, $this.objectWidth)
            }
           
            if($collide -eq $true)
            {
                #write-host "all alternatives collided trying random"

                Do
                {
                    if($collide -eq $true)
                    {
                        $position.object.xPosition = $position.object.xPosition + ($this.objectWidth  * (Get-Random -Maximum 3 -Minimum 0))
                        $position.object.yPosition = $position.object.yPosition + ($this.objectHeight * (Get-Random -Maximum 3 -Minimum 0))
                        $collide = $this.DoesCollide($position.object.xPosition, $position.object.yPosition, $this.objectHeight, $this.objectWidth)
                    }
                }
                While($collide -eq $true)
            }

            #should have a non colliding location by this point
        }
      
        #get path to target position
        $this.path = $global:pathFinder.FindPath($this, $position.object.xPosition, $position.object.yPosition)
	} 
	else
	{
    	#NONE
		$this.objective = "NONE"
	}
}
else
{
	if($this.objective -eq "WAIT")
    {
        $this.sTimer--
        
        if($this.sTimer -le 0)
        {
            #end wait action
            $this.objective = "NONE"
		    $this.subObjective = "NONE"
        }
    }
    elseif($this.objective -eq "EVADEBOMB")
	{
        if($this.path.Count -gt 0)
        {
            #slow movement down
            $this.sTimer++
           
            if($this.sTimer -lt ($this.speed/2))
            {
            }
            else
            {
	            #check if moving out of bounds
                if($this.BoundryCheck($this.path[0].x, $this.path[0].y, $this.objectHeight, $this.objectWidth))
                {
                    $this.xPosition = $this.path[0].x
                    $this.yPosition = $this.path[0].y
                
                    #remove top position from path
                    $this.path.RemoveAt(0)

                    $this.sTimer = 0
                }
                else
                {
                    #path collides or goes out of screen bounds
                    #remove rest of path
                    $this.path = $null
                    $this.objective = "NONE"
		            $this.subObjective = "NONE"
                }
            }
        }
        else
        {
            #END ACTION START WAIT
            $this.sTimer = 30
            $this.objective = "WAIT"
		    $this.subObjective = "NONE"
        }
	}
    elseif($this.objective -eq "DROPBOMB")
    {
        #DROP BOMB
        $bomb = New-Object GameObject
    	$bomb.LoadObject("Bomb.txt")
    	$bomb.xPosition = $this.xPosition
    	$bomb.yPosition = $this.yPosition
        $bomb.SetupJob($global:levels[$global:currentLevel])
    	$global:levels[$global:currentLevel].objects.Add($bomb)
        
        #END ACTION
        $this.objective = "NONE"
		$this.subObjective = "NONE"
    }
	elseif($this.objective -eq "MOVETOPLAYER")
	{
        if($this.path.Count -gt 0)
        {
            #slow movement down
            $this.sTimer++

            if($this.sTimer -lt $this.speed)
            {
            }
            else
            {
	            #move to way point
		
                #move to next position on path
                $this.xPosition = $this.path[0].x
                $this.yPosition = $this.path[0].y

                #remove top position from path
                $this.path.RemoveAt(0)

                $this.sTimer = 0
            }
        }
        else
        {
            #if at end of way points
            $this.objective = "NONE"
		    $this.subObjective = "NONE"
        }
	}
	elseif($this.objective -eq "MOVEOVERSPECIAL")
	{
	}
	elseif($this.objective -eq "MOVETOBLOCK")
	{
        if($this.path.Count -gt 0)
        {
            #slow movement down
            $this.sTimer++

            #write-host "Speed:" $this.speed " sTimer:" $this.sTimer
            #pause
           
            if($this.sTimer -lt $this.speed)
            {
            }
            else
            {
                #write-host "moving"
                #pause

	            #move to way point
		
                #move to next position on path

                #check if moving out of bounds
                if($this.BoundryCheck($this.path[0].x, $this.path[0].y, $this.objectHeight, $this.objectWidth))
                {
                    $this.xPosition = $this.path[0].x
                    $this.yPosition = $this.path[0].y
                
                    #remove top position from path
                    $this.path.RemoveAt(0)

                    $this.sTimer = 0
                }
                else
                {
                    #path collides or goes out of screen bounds
                    #remove rest of path
                    $this.path = $null
                    $this.objective = "NONE"
		            $this.subObjective = "NONE"
                }
            }
        }
        else
        {
            #if at end of way points
            $this.objective = "NONE"
		    $this.subObjective = "NONE"
        }
	}
}

MOVESCRIPTEND:

SOUNDSCRIPTSTART:
NAME:DEATH
[console]::beep(440,200) 
[console]::beep(340,200) 
[console]::beep(240,200) 
[console]::beep(149,200) 
SOUNDSCRIPTEND:
